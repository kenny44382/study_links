# -*- coding: utf-8 -*-
"""TuriCreate Crash Course and ML Tutorial.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RU9_oauctd-rmZvQZ00BN1xUE175gx5U

### TuriCreate Crash Course
+ TuriCreate
  - made by Apple

#### Task
+ Basics
  - How to read csv files
  - How to create dataframes
  - Basic Data Manipulation
+ Text Classification with ML
  - Disaster classifier

#### Installation
+ pip install turicreate


#### Features
+ Easy-to-use: Focus on tasks instead of algorithms
+ Visual: Built-in, streaming visualizations to explore your data
+ Flexible: Supports text, images, audio, video and sensor data
+ Fast and Scalable: Work with large datasets on a single machine
+ Ready To Deploy: Export models to Core ML for use in iOS, macOS, watchOS, and tvOS apps
"""

!pip install turicreate

# Load Pkgs
import turicreate as tc

# Methods/Attrib
dir(tc)

# How to Create Dataframe
+ SFrame is a scalable, tabular, column-mutable dataframe object.

# Method 1: How to create a dataframe from dictionary
df1 = tc.SFrame({'text':['there was an earthquake last year']})

df1

# Method 2: From Pandas
import pandas as pd
df = pd.DataFrame({'age':[1,2,3,4,5]})

df

df2 = tc.SFrame(data=df)

df2

print(type(df))
print(type(df2))

# Reading Data From CSV
df = tc.SFrame('disaster_tweets.csv')

# Display/Preview
df.head()

# Display 5 rows
df.head(5)

# Check For Shape
df.shape

# Number of col
df.num_columns()

# Num of Rows
df.num_rows()

# Check For COlumn Names
df.column_names()

# Datatype
# Method 1
df.column_types()

# Check For Datatypes
# Method 2
df.dtype

### Selection of Columns
df['text']

### Selection of Only one Column
df.select_column('id')

### Selection of Multiple Columns
df[['text','target']]

### Selection of Multiple Columns
df.select_columns(['text','target'])

df

# Plot of Value Counts
df['target'].plot()

dir(df)

df['target'].unique()

# Apply a fxn
df['text'].apply(lambda x: str(x).lower())

# Show value counts of a column
df['target'].show()

# Remove/Delete Columns
df.remove_column('id')

# Remove Multiple Columns
df.remove_columns(['keyword','location'],inplace=True)

df

# Save Dataset
df.save('disaster_data.csv')

df.save('disaster_data2.sframe')

# Reload data
df2 = tc.load_sframe('disaster_data2.sframe')

df2

